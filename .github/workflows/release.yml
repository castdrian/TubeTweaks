name: Build and Release TubeTweaks

on:
  workflow_dispatch:
    inputs:
      decrypted_youtube_url:
        description: "Direct URL of the decrypted YouTube ipa"
        default: ""
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build TubeTweaks
    runs-on: macos-13
    permissions:
      contents: write
    env:
      BUNDLE_ID: com.google.ios.youtube
      APP_NAME: YouTube

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit_id || github.ref }}
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Theos
        uses: Randomblock1/theos-action@v1

      - name: iOS SDK Caching
        id: SDK
        uses: actions/cache@v4
        env:
          cache-name: iOS-${{ inputs.sdk_version }}-SDK
        with:
          path: theos/sdks/
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: Set GNU Make Path
        run: |
          echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH
          (echo export PATH="/usr/local/opt/make/libexec/gnubin:$PATH" >> ~/.bash_profile)
          source ~/.bash_profile

      - name: Hash YT ipa url
        run: |
          URL_YT="$(jq -r '.inputs.decrypted_youtube_url' $GITHUB_EVENT_PATH)"
          echo ::add-mask::$URL_YT
          echo URL_YT=$URL_YT >> $GITHUB_ENV

      - name: Prepare YouTube iPA
        run: |
          wget "${{ github.event.inputs.decrypted_youtube_url }}" --quiet --no-verbose -O YouTube.ipa
          unzip -q YouTube.ipa -d tmp
          echo "YT_VERSION=$(grep -A 1 '<key>CFBundleVersion</key>' tmp/Payload/YouTube.app/Info.plist | grep '<string>' | awk -F'[><]' '{print $3}')" >> $GITHUB_ENV
          LATEST_RELEASE_URL=$(curl -s https://api.github.com/repos/dayanch96/YTLite/releases/latest | jq -r '.assets[] | select(.name | endswith("iphoneos-arm64.deb")) | .browser_download_url')
          echo "YTLITE_VERSION=$(echo $LATEST_RELEASE_URL | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' || echo '0.0.0')" >> $GITHUB_ENV
          rm -rf tmp/Payload/YouTube.app/_CodeSignature/CodeResources
          rm -rf tmp/Payload/YouTube.app/PlugIns/*
          python - <<EOF
          import plistlib
          def remove_uisupporteddevices(filepath):
              with open(filepath, 'rb') as f:
                  plist = plistlib.load(f)

              if 'UISupportedDevices' in plist:
                  del plist['UISupportedDevices']

              with open(filepath, 'wb') as f:
                  plistlib.dump(plist, f)
          
          filepath = 'tmp/Payload/YouTube.app/Info.plist'
          remove_uisupporteddevices(filepath)
          EOF
          cp -R Extensions/*.appex tmp/Payload/YouTube.app/PlugIns
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build Package
        id: build_package
        run: |
          sed -i '' "s/^BUNDLE_ID.*$/BUNDLE_ID = ${{ env.BUNDLE_ID }}/" Makefile
          sed -i '' "s/^DISPLAY_NAME.*$/DISPLAY_NAME = ${{ env.APP_NAME }}/" Makefile
          sed -i '' "s/^PACKAGE_VERSION.*$/PACKAGE_VERSION = ${{ env.YT_VERSION }}/" Makefile
          sed -i '' "s/^export TARGET.*$/export TARGET = iphone:clang:${{ inputs.sdk_version }}:14.0/" Makefile
          make package
          (mv "packages/$(ls -t packages | head -n1)" "packages/TubeTweaks_${{ env.YT_VERSION }}.ipa")
          echo "package=$(ls -t packages | head -n1)" >> $GITHUB_OUTPUT
          echo -e "==> \033[1mSHASUM256: $(shasum -a 256 packages/*.ipa | cut -f1 -d' ')\033[0m"
          echo -e "==> \033[1mBundle ID: ${{ env.BUNDLE_ID }}\033[0m"
        env:
          THEOS: ${{ github.workspace }}/theos
          BUNDLE_ID: ${{ inputs.bundle_id }}
          APP_NAME: ${{ inputs.app_name }}
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.YT_VERSION }}
          files: |
            ${{ github.workspace }}/packages/${{ steps.build_package.outputs.package }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          token: ${{ env.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update app-repo.json
        run: |
          DATE=$(date -u +"%Y-%m-%d")
          IPA_SIZE=$(ls -l packages/${{ steps.build_package.outputs.package }} | awk '{print $5}')
          DOWNLOAD_URL=https://github.com/${{ github.repository }}/releases/download/v${{ env.YT_VERSION }}/TubeTweaks_${{ env.YT_VERSION }}.ipa
          NEW_ENTRY=$(jq -n --arg version "${{ env.YT_VERSION }}" --arg date "$DATE" --arg size "$IPA_SIZE" --arg downloadURL "$DOWNLOAD_URL" '{version: $version, date: $date, size: ($size | tonumber), downloadURL: $downloadURL}')
          jq --argjson newEntry "$NEW_ENTRY" '.apps[0].versions |= [$newEntry] + .' app-repo.json > temp.json && mv temp.json app-repo.json
        
      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "chore: update app-repo.json"
          add: app-repo.json

      - name: Job Summary
        run: |
          echo -e '### ðŸ“º Build Complete' >> $GITHUB_STEP_SUMMARY
